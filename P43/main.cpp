//복습 필요!
//이분검색 응용 -> 결정 알고리즘
//답을 하나 정해놓고 맞냐 아니냐를 판단하는 것.
//답을 정해놓을 때 어떻게 정하냐가 이분 검색을 정하는 것임.
//일단 N~M까지 정답이 있겠지??라고 판단을 하면
//이분 검색에서 나온 mid값을 정답으로 정해놓고 판단하는 것
//판단하다가 가장 좋은 mid값이 나왔다면 그게 정답인 것임.

//1. 특징 : 문제에서 정답을 최소로 하려고함
//2. 주어진 입력에서 얻을 수 있는 정답 중 최소를 찾아나가야 함.
//3. 입력과 출력부터 쳐다봄 3개의 DVD에 9곡을 녹화할 것이고
//4. 하나의 DVD는 최소 17분씩 녹화가 가능함.(최소 용량 크기가 17이라는 뜻)
//5. 따라서 (1,2,3,4,5) (6,7) (8,9)로 가능하다는 것을 알 수 있음.
//6. 일단 답은 1~45사이에 있겠지 거기서 가장 최소화된 정답이 무엇일까

//입력
//9 3
//1 2 3 4 5 6 7 8 9


#include <iostream>

int a[1001], n;
int Count(int size){//dvd개수
    int i, cnt = 1, sum = 0;
    for(i = 1; i <= n; i++){
        //모든 곡 탐색
        if(sum+a[i] > size){
            //a[i]곡은 불가능하다.
            cnt++;//새로운 dvd
            sum = a[i];
        }
        else sum = sum + a[i]; //가능하니까 기존 dvd에 곡 녹화
    }
    return cnt; //필요한 dvd개수 리턴
}

int main() {
    int m, i, lt = 1, rt = 0, mid, res, max = -2147000000;
    scanf("%d %d",&n,&m);
    for(i = 1; i <= n; i++){
        scanf("%d",&a[i]);
        rt = rt+a[i];//45
        if(a[i] > max) max = a[i];
    }
    
    while(lt <= rt){
        mid = (lt+rt)/2;
        if(max <= mid && Count(mid) <= m){
            //dvd가 3개 이하로 곡을 녹화할 수 있다면 정답이다.
            //그리고, 최소 용량은 곡 중에서 가장 길이가 긴 값보다는 크거나 같아야한다.
            
            //첫번째 반복에서 mid가 23임
            //Count(mid)는 2인데
            //최소 용량이 23이면 dvd 2개만으로도 가능함.
            //그렇다고 틀린게 아님, 최소용량이 23이면 dvd3개로도 가능하기 때문임.
            //그래서 Count(mid) <= m으로 조건을 걸어두고 더 좋은 답을 찾기 위해
            
            res = mid;//일단 정답 넣어주고
            rt = mid-1; //더 좋은 방안을 찾기 위해 좁히기
        }
        else lt = mid+1;//답이 아니다.
    }
    printf("%d\n",res);
    
    return 0;
}
